name: Rust

on:
  push:
    branches: [ 'main', 'stable' ]
  pull_request:
    branches: [ '**' ]

permissions:
  contents: write  # for create-release & upload-release-asset

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest ]

    steps:
      - uses: actions/checkout@v4

      - name: Build (release)
        run: cargo build --release

      - name: Locate binary
        id: find_bin
        shell: bash
        run: |
          BIN=$(find target/release -maxdepth 1 -type f | head -n1)
          echo "bin_path=$BIN" >> $GITHUB_OUTPUT
          echo "upload_name=$(basename $BIN)" >> $GITHUB_OUTPUT

      - name: Upload binary artifact
        uses: actions/upload-artifact@v4     # ← upgraded to v4
        with:
          name: ${{ matrix.os }}-artifact
          path: ${{ steps.find_bin.outputs.bin_path }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref =~ 'refs/(heads/main|heads/stable)'

    steps:
      - name: Create GitHub Release
        id: create_rel
        uses: actions/create-release@v1
        with:
          tag_name: run-${{ github.run_id }}
          release_name: Release #${{ github.run_number }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Download Linux artifact
        uses: actions/download-artifact@v4   # ← upgraded to v4
        with:
          name: ubuntu-latest-artifact
          path: artifacts/linux

      - name: Download Windows artifact
        uses: actions/download-artifact@v4   # ← upgraded to v4
        with:
          name: windows-latest-artifact
          path: artifacts/windows

      - name: Upload Linux binary to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_rel.outputs.upload_url }}
          asset_path: artifacts/linux/*
          asset_name: linux-binary
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Windows binary to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_rel.outputs.upload_url }}
          asset_path: artifacts/windows/*
          asset_name: windows-binary.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
